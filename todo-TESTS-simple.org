#+property: board-name    api test board
#+property: board-id      51d99bbc1e1d8988390047f2
#+property: TODO 51d99bbc1e1d8988390047f3
#+property: IN-PROGRESS 51d99bbc1e1d8988390047f4
#+property: DONE 51d99bbc1e1d8988390047f5
#+property: PENDING 51e53898ea3d1780690015ca
#+property: DELEGATED 51e538a89c05f1e25c0027c6
#+property: FAIL 51e538a26f75d07902002d25
#+property: CANCELLED 51e538e6c7a68fa0510014ee
#+TODO: TODO IN-PROGRESS DONE | PENDING DELEGATED FAIL CANCELLED
#+title: dummy sample to sync with trello
#+author: Antoine R. Dumont

* TODO Joy of FUN(ctional) LANGUAGES
:PROPERTIES:
:END:
- [-] LISP family
  - [X] Emacs-Lisp
  - [X] Common-Lisp
  - [ ] Scheme
  - [X] Clojure
- [X] ML family
  - [X] Haskell
  - [X] Ocaml
- [X] hybrid family
  - [X] Scala
* DONE Programming in scala
:PROPERTIES:
:END:
- [-] chapters
  - [-] introduction
  - [-] Ch. 1 - A scalable language
  - [-] Ch. 2 - First steps in scala
  - [-] Ch. 3 - Next steps in scala
  - [-] Ch. 4 - Classes and objects
  - [X] Ch. 5 - Basic types and operations
  - [-] Ch. 6 - Functional objects
  - [-] Ch. 7 - Buit-in control structures
  - [X] Ch. 8 - Functions and closures
  - [-] Ch. 9 - Control abstraction
  - [-] Ch. 10 - Composition and inheritance
  - [-] Ch. 11 - Scala's hierarchy
  - [-] Ch. 12 - Traits
* DONE Functional programming in Haskell
:PROPERTIES:
:END:
* PENDING Questions about life, the universe and everything
- [-] How to deal with promotion/demotion?
